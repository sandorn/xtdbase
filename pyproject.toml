[project]
name = "xtdbase"
version = "0.1.0"
description = "扩展数据库与数据处理工具库 - 提供Excel操作、MySQL连接池、Redis客户端等统一接口"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "sandorn", email = "sandorn@live.cn"}
]
license = "MIT"
dependencies = [
    "numpy>=2.3.4",
    "openpyxl>=3.1.5",
    "pandas>=2.3.3",
    "pydantic>=2.12.3",
    "xtlog>=0.1.9",
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Office/Business",
    "Operating System :: OS Independent",
]

[project.optional-dependencies]
# MySQL 支持
mysql = [
    "aiomysql>=0.2.0",
    "pymysql>=1.1.2",
    "sqlalchemy>=2.0.0",  # aiomysql.sa 需要
]
# Redis 支持
redis = [
    "redis>=6.4.0",
]
# 加密支持
crypto = [
    "cryptography>=44.0.0",
]
# 完整安装（包含所有可选依赖）
all = [
    "aiomysql>=0.2.0",
    "pymysql>=1.1.2",
    "sqlalchemy>=2.0.0",
    "redis>=6.4.0",
    "cryptography>=44.0.0",
]
# 测试依赖
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]


[project.urls]
homepage = "https://github.com/sandorn/xtdbase"
repository = "https://github.com/sandorn/xtdbase"
documentation = "https://github.com/sandorn/xtdbase/wiki"
issues = "https://github.com/sandorn/xtdbase/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

#=======================================================
[tool.ruff]
target-version = "py313"
cache-dir = "D:/TMP/ruff_cache"
preview = true
line-length = 200

# 排除配置
exclude = [
    ".venv", "__pycache__", "build", "dist",
    "migrations", "node_modules", "tests/fixtures",
    "**/generated/*.py", "*.pyc", "*.pyo", "*.pyd",
    "*.so", "*.dll", "*.dylib", "*.egg-info", "*.egg",
    "*.log", "*.tmp", "*.bak", "old_code/**"
]

[tool.ruff.lint]
select = [
    "B",    # bugbear
    "SIM",  # simplify
    "RUF",  # ruff
    "UP",   # pyupgrade
    "I",    # isort
    "C90",  # mccabe
    "N",    # pep8-naming
    "S",    # bandit
    "T",    # flake8-print
    "F",    # pyflakes
    "E",    # pycodestyle
    "RET",  # flake8-return
    "PT",   # flake8-pytest-style
]

ignore = [
    "A",    # 完全禁用 flake8-annotations
    "ANN",  # 完全禁用 flake8-annotations 扩展
    "E501", # 行超长 (由 line-length 控制)
    "B006", # 可变默认值
    "RUF002", # 字符串中全角标点
    "RUF003", # 字符串中全角标点
    "Q000", # 与格式化器冲突的引号规则
    "Q003", # 与格式化器冲突的引号规则
    # "RUF022",  # __all__ 排序
    "D203", "D212",  # 文档字符串格式
    "S101",  # 测试文件中允许断言
    "T201",  # 测试文件中允许 print
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # 未使用的导入在 __init__ 中可接受
"examples/**" = ["F401"]  # 示例代码中允许未使用的导入

[tool.ruff.lint.isort]
known-first-party = []
known-third-party = []
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
force-single-line = false
order-by-type = true
force-sort-within-sections = false
split-on-trailing-comma = false  # 添加这一行

[tool.ruff.format]
indent-style = "space"
quote-style = "single"
docstring-code-format = true
line-ending = "auto"
skip-magic-trailing-comma = false  # 改为 true 避免与长行冲突

#=======================================================

# 类型检查器: basedpyright

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "basic"
reportMissingImports = "error"
reportUnusedImport = "none"
reportUnusedVariable = "warning"
reportExplicitAny = "none"
reportAny = "none"
reportUnannotatedClassAttribute = "none"
exclude = [
    "**/tests/**",
    "**/test_*", 
    "**/__pycache__/**",
    "**/.git/**",
    "**/migrations/**",
    "**/node_modules/**",
    "**/old_code/**"
]

#=======================================================

# 可选类型检查器：mypy 
[tool.mypy]
python_version = "3.13"
cache_dir = "D:/TMP/mypy_cache/"
show_error_codes = true
check_untyped_defs = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_untyped_decorators = false
implicit_optional = false
strict_equality = false
strict_optional = true

#=======================================================
